{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wasif\\\\OneDrive\\\\Desktop\\\\weather app proj\\\\frontend\\\\src\\\\components\\\\WeatherTrends.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst WeatherTrends = ({\n  timeseriesData\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState('trends');\n  const [activeMetric, setActiveMetric] = useState('precipitation');\n  if (!timeseriesData || Object.keys(timeseriesData).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card animate-slide-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold text-gray-800 mb-4\",\n        children: \"\\uD83D\\uDCCA Weather Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8 text-gray-500\",\n        children: \"No weather data available. Click \\\"Run Detection\\\" to load data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  const currentData = timeseriesData[activeMetric];\n  if (!currentData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card animate-slide-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold text-gray-800 mb-4\",\n        children: \"\\uD83D\\uDCCA Weather Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8 text-gray-500\",\n        children: [\"No data available for \", activeMetric.replace('_', ' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Function to calculate annual averages and 10-year moving averages\n  const calculateTrendData = () => {\n    // Group data by year and calculate annual averages\n    const yearlyData = {};\n    currentData.dates.forEach((dateStr, index) => {\n      const year = new Date(dateStr).getFullYear();\n      if (!yearlyData[year]) {\n        yearlyData[year] = {\n          values: [],\n          count: 0\n        };\n      }\n      yearlyData[year].values.push(currentData.values[index]);\n      yearlyData[year].count++;\n    });\n\n    // Calculate annual averages\n    const years = Object.keys(yearlyData).map(Number).sort();\n    const annualValues = years.map(year => {\n      const sum = yearlyData[year].values.reduce((a, b) => a + b, 0);\n      return sum / yearlyData[year].values.length;\n    });\n\n    // Calculate 10-year moving averages\n    const movingAverages = [];\n    const window = 10;\n    for (let i = 0; i < annualValues.length; i++) {\n      if (i < window - 1) {\n        movingAverages.push(null); // Not enough data for moving average\n      } else {\n        const windowSum = annualValues.slice(i - window + 1, i + 1).reduce((a, b) => a + b, 0);\n        movingAverages.push(windowSum / window);\n      }\n    }\n    return {\n      years: years.map(year => year.toString()),\n      annualValues,\n      movingAverages: movingAverages.filter(val => val !== null),\n      movingAverageYears: years.slice(window - 1).map(year => year.toString())\n    };\n  };\n\n  // Prepare data based on active tab\n  const getChartData = () => {\n    if (activeTab === 'trends') {\n      // Show annual trends with moving averages\n      const trendData = calculateTrendData();\n      if (activeMetric === 'precipitation') {\n        return {\n          labels: trendData.years,\n          datasets: [{\n            label: 'Annual Precipitation',\n            data: trendData.annualValues,\n            borderColor: 'rgba(59, 130, 246, 0.4)',\n            backgroundColor: 'rgba(59, 130, 246, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 4,\n            borderWidth: 1,\n            fill: false\n          }, {\n            label: 'Precipitation (10Y Avg)',\n            data: trendData.movingAverageYears.map((year, index) => ({\n              x: year,\n              y: trendData.movingAverages[index]\n            })),\n            borderColor: '#059669',\n            backgroundColor: 'rgba(5, 150, 105, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 5,\n            borderWidth: 3,\n            fill: false\n          }]\n        };\n      } else {\n        // For temperature, we need to calculate trends for all three metrics\n        const precipData = timeseriesData.precipitation ? calculateTrendData() : null;\n        const maxTempData = timeseriesData.max_temperature ? calculateTrendData() : null;\n        const minTempData = timeseriesData.min_temperature ? calculateTrendData() : null;\n\n        // Use the current metric's years as base\n        const trendData = calculateTrendData();\n        const datasets = [];\n        if (activeMetric === 'max_temperature') {\n          datasets.push({\n            label: 'Annual Max Temperature',\n            data: trendData.annualValues,\n            borderColor: 'rgba(239, 68, 68, 0.4)',\n            backgroundColor: 'rgba(239, 68, 68, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 4,\n            borderWidth: 1,\n            fill: false\n          }, {\n            label: 'Max Temp (10Y Avg)',\n            data: trendData.movingAverageYears.map((year, index) => ({\n              x: year,\n              y: trendData.movingAverages[index]\n            })),\n            borderColor: '#dc2626',\n            backgroundColor: 'rgba(220, 38, 38, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 5,\n            borderWidth: 3,\n            fill: false\n          });\n        } else if (activeMetric === 'min_temperature') {\n          datasets.push({\n            label: 'Annual Min Temperature',\n            data: trendData.annualValues,\n            borderColor: 'rgba(16, 185, 129, 0.4)',\n            backgroundColor: 'rgba(16, 185, 129, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 4,\n            borderWidth: 1,\n            fill: false\n          }, {\n            label: 'Min Temp (10Y Avg)',\n            data: trendData.movingAverageYears.map((year, index) => ({\n              x: year,\n              y: trendData.movingAverages[index]\n            })),\n            borderColor: '#059669',\n            backgroundColor: 'rgba(5, 150, 105, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 5,\n            borderWidth: 3,\n            fill: false\n          });\n        }\n        return {\n          labels: trendData.years,\n          datasets\n        };\n      }\n    } else {\n      // Show anomalies with significant ones highlighted (keep existing logic)\n      return {\n        labels: currentData.dates,\n        datasets: [{\n          label: `${activeMetric === 'precipitation' ? 'Precipitation' : activeMetric.replace('_', ' ')} Anomalies`,\n          data: currentData.anomalies,\n          borderColor: activeMetric === 'precipitation' ? '#3b82f6' : activeMetric === 'max_temperature' ? '#ef4444' : '#10b981',\n          backgroundColor: activeMetric === 'precipitation' ? 'rgba(59, 130, 246, 0.1)' : activeMetric === 'max_temperature' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(16, 185, 129, 0.1)',\n          tension: 0.1,\n          pointRadius: currentData.significant.map(sig => sig ? 5 : 1),\n          pointBackgroundColor: currentData.significant.map((sig, i) => sig ? '#dc2626' : activeMetric === 'precipitation' ? '#3b82f6' : activeMetric === 'max_temperature' ? '#ef4444' : '#10b981'),\n          pointBorderColor: currentData.significant.map(sig => sig ? '#dc2626' : '#ffffff'),\n          pointBorderWidth: 1,\n          pointHoverRadius: 6,\n          borderWidth: 1.5,\n          fill: false\n        }]\n      };\n    }\n  };\n  const chartData = getChartData();\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          color: '#374151',\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: activeTab === 'trends' ? `${activeMetric === 'precipitation' ? 'Annual Precipitation in Pakistan (1901–2024) with 10-Year Moving Average' : `Average Annual ${activeMetric.replace('_', ' ')} in Pakistan (1901–2024) with 10-Year Moving Average`}` : `${activeMetric === 'precipitation' ? 'Precipitation' : activeMetric.replace('_', ' ')} Anomalies (1901-2024)`,\n        color: '#1f2937',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: context => {\n            if (activeTab === 'trends') {\n              return `Year: ${context[0].label}`;\n            } else {\n              const date = new Date(context[0].label);\n              return date.toLocaleDateString('en-US', {\n                year: 'numeric',\n                month: 'short'\n              });\n            }\n          },\n          label: context => {\n            const unit = activeMetric === 'precipitation' ? 'mm' : '°C';\n            if (activeTab === 'trends') {\n              return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit}`;\n            } else {\n              const index = context.dataIndex;\n              const zScore = currentData.z_scores[index];\n              const isSignificant = currentData.significant[index];\n              return [`Anomaly: ${context.parsed.y.toFixed(2)}${unit}`, `Z-Score: ${zScore.toFixed(2)}`, `Significant: ${isSignificant ? 'Yes (|Z| ≥ 2.0)' : 'No'}`];\n            }\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: activeTab === 'trends' ? 'category' : 'time',\n        ...(activeTab === 'anomalies' && {\n          time: {\n            unit: 'year',\n            displayFormats: {\n              year: 'yyyy'\n            }\n          }\n        }),\n        title: {\n          display: true,\n          text: 'Year',\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280',\n          ...(activeTab === 'trends' && {\n            callback: function (value, index) {\n              // Show every 10th year for trends to avoid crowding\n              const year = parseInt(this.getLabelForValue(value));\n              return year % 10 === 0 ? year : '';\n            }\n          })\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: activeTab === 'trends' ? `${activeMetric === 'precipitation' ? 'Precipitation (mm)' : 'Temperature (°C)'}` : `Anomaly (${activeMetric === 'precipitation' ? 'mm' : '°C'})`,\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280'\n        }\n      }\n    }\n  };\n\n  // Calculate summary statistics\n  const significantCount = currentData.significant.filter(Boolean).length;\n  const totalCount = currentData.dates.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card animate-slide-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold text-gray-800\",\n        children: \"\\uD83D\\uDCCA Weather Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex bg-gray-100 rounded-lg p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('trends'),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeTab === 'trends' ? 'bg-blue-500 text-white shadow-sm' : 'text-gray-600 hover:text-gray-800'}`,\n          children: \"\\uD83D\\uDCC8 Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('anomalies'),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeTab === 'anomalies' ? 'bg-red-500 text-white shadow-sm' : 'text-gray-600 hover:text-gray-800'}`,\n          children: \"\\uD83D\\uDEA8 Anomalies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex bg-gray-50 rounded-lg p-1 gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveMetric('precipitation'),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeMetric === 'precipitation' ? 'bg-blue-500 text-white shadow-sm' : 'text-gray-600 hover:text-gray-800'}`,\n          children: \"\\uD83C\\uDF27\\uFE0F Precipitation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveMetric('max_temperature'),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeMetric === 'max_temperature' ? 'bg-red-500 text-white shadow-sm' : 'text-gray-600 hover:text-gray-800'}`,\n          children: \"\\uD83D\\uDD25 Max Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveMetric('min_temperature'),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeMetric === 'min_temperature' ? 'bg-green-500 text-white shadow-sm' : 'text-gray-600 hover:text-gray-800'}`,\n          children: \"\\u2744\\uFE0F Min Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-96 mb-6\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), activeTab === 'anomalies' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 bg-gray-50 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-gray-700\",\n          children: \"Total Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold text-blue-600\",\n          children: totalCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500\",\n          children: \"1901-2024\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-gray-700\",\n          children: \"Significant Anomalies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold text-red-600\",\n          children: significantCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500\",\n          children: [(significantCount / totalCount * 100).toFixed(1), \"% of records\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-gray-700\",\n          children: \"Detection Threshold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold text-gray-600\",\n          children: \"|Z| \\u2265 2.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500\",\n          children: \"Statistical significance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }, this), activeTab === 'trends' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 p-4 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-gray-700\",\n          children: \"Long-term Climate Trends (1901-2024)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-2\",\n          children: [\"\\uD83D\\uDCC8 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Annual Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 18\n          }, this), \" Light line shows yearly averages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 80\n          }, this), \"\\uD83D\\uDCCA \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"10-Year Moving Average:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 18\n          }, this), \" Bold line shows smoothed long-term trends\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm text-gray-600\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: activeTab === 'trends' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Trends View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), \" Shows annual averages (light line) and 10-year moving averages (bold line) to reveal long-term climate patterns and reduce year-to-year noise.\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Anomalies View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), \" Shows deviations from historical norms. Red dots indicate statistically significant anomalies (|Z-score| \\u2265 2.0) using monthly baseline calculations.\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherTrends, \"yfql4bWz549g+bUnP24aUCrvFYA=\");\n_c = WeatherTrends;\nexport default WeatherTrends;\nvar _c;\n$RefreshReg$(_c, \"WeatherTrends\");","map":{"version":3,"names":["React","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","register","WeatherTrends","timeseriesData","_s","activeTab","setActiveTab","activeMetric","setActiveMetric","Object","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentData","replace","calculateTrendData","yearlyData","dates","forEach","dateStr","index","year","Date","getFullYear","values","count","push","years","map","Number","sort","annualValues","sum","reduce","a","b","movingAverages","window","i","windowSum","slice","toString","filter","val","movingAverageYears","getChartData","trendData","labels","datasets","label","data","borderColor","backgroundColor","tension","pointRadius","pointHoverRadius","borderWidth","fill","x","y","precipData","precipitation","maxTempData","max_temperature","minTempData","min_temperature","anomalies","significant","sig","pointBackgroundColor","pointBorderColor","pointBorderWidth","chartData","options","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","legend","position","color","font","size","title","display","text","weight","tooltip","callbacks","context","date","toLocaleDateString","month","unit","dataset","parsed","toFixed","dataIndex","zScore","z_scores","isSignificant","scales","type","time","displayFormats","grid","lineWidth","ticks","callback","value","parseInt","getLabelForValue","significantCount","Boolean","totalCount","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wasif/OneDrive/Desktop/weather app proj/frontend/src/components/WeatherTrends.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\ninterface TimeseriesData {\n  dates: string[];\n  anomalies: number[];\n  z_scores: number[];\n  significant: boolean[];\n  values: number[];\n  historical_avg: number[];\n}\n\ninterface WeatherTrendsProps {\n  timeseriesData: {\n    precipitation?: TimeseriesData;\n    max_temperature?: TimeseriesData;\n    min_temperature?: TimeseriesData;\n  };\n}\n\nconst WeatherTrends: React.FC<WeatherTrendsProps> = ({ timeseriesData }) => {\n  const [activeTab, setActiveTab] = useState<'trends' | 'anomalies'>('trends');\n  const [activeMetric, setActiveMetric] = useState<'precipitation' | 'max_temperature' | 'min_temperature'>('precipitation');\n\n  if (!timeseriesData || Object.keys(timeseriesData).length === 0) {\n    return (\n      <div className=\"card animate-slide-up\">\n        <h3 className=\"text-xl font-bold text-gray-800 mb-4\">\n          📊 Weather Analysis\n        </h3>\n        <div className=\"text-center py-8 text-gray-500\">\n          No weather data available. Click \"Run Detection\" to load data.\n        </div>\n      </div>\n    );\n  }\n\n  const currentData = timeseriesData[activeMetric];\n  \n  if (!currentData) {\n    return (\n      <div className=\"card animate-slide-up\">\n        <h3 className=\"text-xl font-bold text-gray-800 mb-4\">\n          📊 Weather Analysis\n        </h3>\n        <div className=\"text-center py-8 text-gray-500\">\n          No data available for {activeMetric.replace('_', ' ')}\n        </div>\n      </div>\n    );\n  }\n\n  // Function to calculate annual averages and 10-year moving averages\n  const calculateTrendData = () => {\n    // Group data by year and calculate annual averages\n    const yearlyData: { [year: number]: { values: number[], count: number } } = {};\n    \n    currentData.dates.forEach((dateStr, index) => {\n      const year = new Date(dateStr).getFullYear();\n      if (!yearlyData[year]) {\n        yearlyData[year] = { values: [], count: 0 };\n      }\n      yearlyData[year].values.push(currentData.values[index]);\n      yearlyData[year].count++;\n    });\n\n    // Calculate annual averages\n    const years = Object.keys(yearlyData).map(Number).sort();\n    const annualValues = years.map(year => {\n      const sum = yearlyData[year].values.reduce((a, b) => a + b, 0);\n      return sum / yearlyData[year].values.length;\n    });\n\n    // Calculate 10-year moving averages\n    const movingAverages = [];\n    const window = 10;\n    \n    for (let i = 0; i < annualValues.length; i++) {\n      if (i < window - 1) {\n        movingAverages.push(null); // Not enough data for moving average\n      } else {\n        const windowSum = annualValues.slice(i - window + 1, i + 1).reduce((a, b) => a + b, 0);\n        movingAverages.push(windowSum / window);\n      }\n    }\n\n    return {\n      years: years.map(year => year.toString()),\n      annualValues,\n      movingAverages: movingAverages.filter(val => val !== null),\n      movingAverageYears: years.slice(window - 1).map(year => year.toString())\n    };\n  };\n\n  // Prepare data based on active tab\n  const getChartData = () => {\n    if (activeTab === 'trends') {\n      // Show annual trends with moving averages\n      const trendData = calculateTrendData();\n      \n      if (activeMetric === 'precipitation') {\n        return {\n          labels: trendData.years,\n          datasets: [\n            {\n              label: 'Annual Precipitation',\n              data: trendData.annualValues,\n              borderColor: 'rgba(59, 130, 246, 0.4)',\n              backgroundColor: 'rgba(59, 130, 246, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Precipitation (10Y Avg)',\n              data: trendData.movingAverageYears.map((year, index) => ({\n                x: year,\n                y: trendData.movingAverages[index]\n              })),\n              borderColor: '#059669',\n              backgroundColor: 'rgba(5, 150, 105, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          ]\n        };\n      } else {\n        // For temperature, we need to calculate trends for all three metrics\n        const precipData = timeseriesData.precipitation ? calculateTrendData() : null;\n        const maxTempData = timeseriesData.max_temperature ? calculateTrendData() : null;\n        const minTempData = timeseriesData.min_temperature ? calculateTrendData() : null;\n        \n        // Use the current metric's years as base\n        const trendData = calculateTrendData();\n        \n        const datasets = [];\n        \n        if (activeMetric === 'max_temperature') {\n          datasets.push(\n            {\n              label: 'Annual Max Temperature',\n              data: trendData.annualValues,\n              borderColor: 'rgba(239, 68, 68, 0.4)',\n              backgroundColor: 'rgba(239, 68, 68, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Max Temp (10Y Avg)',\n              data: trendData.movingAverageYears.map((year, index) => ({\n                x: year,\n                y: trendData.movingAverages[index]\n              })),\n              borderColor: '#dc2626',\n              backgroundColor: 'rgba(220, 38, 38, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          );\n        } else if (activeMetric === 'min_temperature') {\n          datasets.push(\n            {\n              label: 'Annual Min Temperature',\n              data: trendData.annualValues,\n              borderColor: 'rgba(16, 185, 129, 0.4)',\n              backgroundColor: 'rgba(16, 185, 129, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Min Temp (10Y Avg)',\n              data: trendData.movingAverageYears.map((year, index) => ({\n                x: year,\n                y: trendData.movingAverages[index]\n              })),\n              borderColor: '#059669',\n              backgroundColor: 'rgba(5, 150, 105, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          );\n        }\n        \n        return {\n          labels: trendData.years,\n          datasets\n        };\n      }\n    } else {\n      // Show anomalies with significant ones highlighted (keep existing logic)\n      return {\n        labels: currentData.dates,\n        datasets: [\n          {\n            label: `${activeMetric === 'precipitation' ? 'Precipitation' : activeMetric.replace('_', ' ')} Anomalies`,\n            data: currentData.anomalies,\n            borderColor: activeMetric === 'precipitation' ? '#3b82f6' : \n                        activeMetric === 'max_temperature' ? '#ef4444' : '#10b981',\n            backgroundColor: activeMetric === 'precipitation' ? 'rgba(59, 130, 246, 0.1)' : \n                            activeMetric === 'max_temperature' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(16, 185, 129, 0.1)',\n            tension: 0.1,\n            pointRadius: currentData.significant.map(sig => sig ? 5 : 1),\n            pointBackgroundColor: currentData.significant.map((sig, i) => \n              sig ? '#dc2626' : (activeMetric === 'precipitation' ? '#3b82f6' : \n                               activeMetric === 'max_temperature' ? '#ef4444' : '#10b981')\n            ),\n            pointBorderColor: currentData.significant.map(sig => sig ? '#dc2626' : '#ffffff'),\n            pointBorderWidth: 1,\n            pointHoverRadius: 6,\n            borderWidth: 1.5,\n            fill: false,\n          }\n        ]\n      };\n    }\n  };\n\n  const chartData = getChartData();\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index' as const,\n      intersect: false,\n    },\n    plugins: {\n      legend: {\n        position: 'top' as const,\n        labels: {\n          color: '#374151',\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: activeTab === 'trends' ? \n          `${activeMetric === 'precipitation' ? 'Annual Precipitation in Pakistan (1901–2024) with 10-Year Moving Average' : \n            `Average Annual ${activeMetric.replace('_', ' ')} in Pakistan (1901–2024) with 10-Year Moving Average`}` :\n          `${activeMetric === 'precipitation' ? 'Precipitation' : activeMetric.replace('_', ' ')} Anomalies (1901-2024)`,\n        color: '#1f2937',\n        font: {\n          size: 16,\n          weight: 'bold' as const\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: (context: any) => {\n            if (activeTab === 'trends') {\n              return `Year: ${context[0].label}`;\n            } else {\n              const date = new Date(context[0].label);\n              return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short' });\n            }\n          },\n          label: (context: any) => {\n            const unit = activeMetric === 'precipitation' ? 'mm' : '°C';\n            \n            if (activeTab === 'trends') {\n              return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit}`;\n            } else {\n              const index = context.dataIndex;\n              const zScore = currentData.z_scores[index];\n              const isSignificant = currentData.significant[index];\n              return [\n                `Anomaly: ${context.parsed.y.toFixed(2)}${unit}`,\n                `Z-Score: ${zScore.toFixed(2)}`,\n                `Significant: ${isSignificant ? 'Yes (|Z| ≥ 2.0)' : 'No'}`\n              ];\n            }\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: activeTab === 'trends' ? 'category' as const : 'time' as const,\n        ...(activeTab === 'anomalies' && {\n          time: {\n            unit: 'year' as const,\n            displayFormats: {\n              year: 'yyyy'\n            }\n          }\n        }),\n        title: {\n          display: true,\n          text: 'Year',\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280',\n          ...(activeTab === 'trends' && {\n            callback: function(value: any, index: number) {\n              // Show every 10th year for trends to avoid crowding\n              const year = parseInt(this.getLabelForValue(value));\n              return year % 10 === 0 ? year : '';\n            }\n          })\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: activeTab === 'trends' ? \n            `${activeMetric === 'precipitation' ? 'Precipitation (mm)' : 'Temperature (°C)'}` :\n            `Anomaly (${activeMetric === 'precipitation' ? 'mm' : '°C'})`,\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280'\n        }\n      }\n    }\n  };\n\n  // Calculate summary statistics\n  const significantCount = currentData.significant.filter(Boolean).length;\n  const totalCount = currentData.dates.length;\n\n  return (\n    <div className=\"card animate-slide-up\">\n      {/* Header with tabs */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4\">\n        <h3 className=\"text-xl font-bold text-gray-800\">\n          📊 Weather Analysis Dashboard\n        </h3>\n        \n        {/* View Toggle */}\n        <div className=\"flex bg-gray-100 rounded-lg p-1\">\n          <button\n            onClick={() => setActiveTab('trends')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeTab === 'trends'\n                ? 'bg-blue-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            📈 Trends\n          </button>\n          <button\n            onClick={() => setActiveTab('anomalies')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeTab === 'anomalies'\n                ? 'bg-red-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            🚨 Anomalies\n          </button>\n        </div>\n      </div>\n\n      {/* Metric selector */}\n      <div className=\"flex justify-center mb-6\">\n        <div className=\"flex bg-gray-50 rounded-lg p-1 gap-1\">\n          <button\n            onClick={() => setActiveMetric('precipitation')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeMetric === 'precipitation'\n                ? 'bg-blue-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            🌧️ Precipitation\n          </button>\n          <button\n            onClick={() => setActiveMetric('max_temperature')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeMetric === 'max_temperature'\n                ? 'bg-red-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            🔥 Max Temperature\n          </button>\n          <button\n            onClick={() => setActiveMetric('min_temperature')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeMetric === 'min_temperature'\n                ? 'bg-green-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            ❄️ Min Temperature\n          </button>\n        </div>\n      </div>\n\n      {/* Chart */}\n      <div className=\"h-96 mb-6\">\n        <Line data={chartData} options={options} />\n      </div>\n\n      {/* Summary Statistics */}\n      {activeTab === 'anomalies' && (\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 bg-gray-50 p-4 rounded-lg\">\n          <div className=\"text-center\">\n            <p className=\"font-semibold text-gray-700\">Total Records</p>\n            <p className=\"text-2xl font-bold text-blue-600\">{totalCount}</p>\n            <p className=\"text-xs text-gray-500\">1901-2024</p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"font-semibold text-gray-700\">Significant Anomalies</p>\n            <p className=\"text-2xl font-bold text-red-600\">{significantCount}</p>\n            <p className=\"text-xs text-gray-500\">{((significantCount / totalCount) * 100).toFixed(1)}% of records</p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"font-semibold text-gray-700\">Detection Threshold</p>\n            <p className=\"text-2xl font-bold text-gray-600\">|Z| ≥ 2.0</p>\n            <p className=\"text-xs text-gray-500\">Statistical significance</p>\n          </div>\n        </div>\n      )}\n\n      {/* Trend Statistics */}\n      {activeTab === 'trends' && (\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <div className=\"text-center\">\n            <p className=\"font-semibold text-gray-700\">Long-term Climate Trends (1901-2024)</p>\n            <p className=\"text-sm text-gray-600 mt-2\">\n              📈 <strong>Annual Data:</strong> Light line shows yearly averages<br/>\n              📊 <strong>10-Year Moving Average:</strong> Bold line shows smoothed long-term trends\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Explanation */}\n      <div className=\"mt-4 text-sm text-gray-600\">\n        <p>\n          {activeTab === 'trends' ? (\n            <><strong>Trends View:</strong> Shows annual averages (light line) and 10-year moving averages (bold line) to reveal long-term climate patterns and reduce year-to-year noise.</>\n          ) : (\n            <><strong>Anomalies View:</strong> Shows deviations from historical norms. Red dots indicate statistically significant anomalies (|Z-score| ≥ 2.0) using monthly baseline calculations.</>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherTrends; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}