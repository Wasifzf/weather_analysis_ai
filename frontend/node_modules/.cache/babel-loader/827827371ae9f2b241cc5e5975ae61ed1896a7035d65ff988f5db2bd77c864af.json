{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.NODE_ENV==='production'?'/api':'';const api=axios.create({baseURL:API_BASE_URL,timeout:30000});export const weatherAPI={// Get weather data summary\ngetSummary:async()=>{const response=await api.get('/data/summary');return response.data.data;},// Get weather data by year range\ngetWeatherByRange:async(startYear,endYear)=>{const response=await api.get(`/data/range?start_year=${startYear}&end_year=${endYear}`);return response.data.data;},// Get anomalies\ngetAnomalies:async function(severity){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:50;const params=new URLSearchParams();if(severity)params.append('severity',severity);params.append('limit',limit.toString());const response=await api.get(`/anomalies?${params.toString()}`);return response.data.data;},// Get anomaly timeseries data (notebook style)\ngetAnomalyTimeseries:async function(){let location=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'default';const response=await api.get(`/anomalies/timeseries?location=${location}`);return response.data.data;},// Run anomaly detection\ndetectAnomalies:async()=>{const response=await api.post('/anomalies/detect');return response.data.data;},// Get AI insights\ngetAIInsights:async()=>{const response=await api.get('/ai/insights');return response.data.data;},// Get climate analysis\ngetClimateAnalysis:async()=>{const response=await api.get('/ai/climate-analysis');return response.data.data;},// Get dashboard summary\ngetDashboardSummary:async()=>{const response=await api.get('/dashboard/summary');return response.data.data;},// Chat with AI (RAG)\nchatWithAI:async(message,context)=>{const response=await api.post('/ai/chat',{message,context:context||null});return response.data.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","api","create","baseURL","timeout","weatherAPI","getSummary","response","get","data","getWeatherByRange","startYear","endYear","getAnomalies","severity","limit","arguments","length","undefined","params","URLSearchParams","append","toString","getAnomalyTimeseries","location","detectAnomalies","post","getAIInsights","getClimateAnalysis","getDashboardSummary","chatWithAI","message","context"],"sources":["C:/Users/wasif/OneDrive/Desktop/weather app proj/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { APIResponse, WeatherSummary, AnomalyResponse, AIInsights, WeatherData, AnomalyTimeseriesResponse } from '../types';\n\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? '/api' : '';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n});\n\nexport const weatherAPI = {\n  // Get weather data summary\n  getSummary: async (): Promise<WeatherSummary> => {\n    const response = await api.get<APIResponse<WeatherSummary>>('/data/summary');\n    return response.data.data;\n  },\n\n  // Get weather data by year range\n  getWeatherByRange: async (startYear: number, endYear: number): Promise<{ records: WeatherData[], count: number }> => {\n    const response = await api.get<APIResponse<{ records: WeatherData[], count: number }>>(\n      `/data/range?start_year=${startYear}&end_year=${endYear}`\n    );\n    return response.data.data;\n  },\n\n  // Get anomalies\n  getAnomalies: async (severity?: string, limit: number = 50): Promise<AnomalyResponse> => {\n    const params = new URLSearchParams();\n    if (severity) params.append('severity', severity);\n    params.append('limit', limit.toString());\n    \n    const response = await api.get<APIResponse<AnomalyResponse>>(`/anomalies?${params.toString()}`);\n    return response.data.data;\n  },\n\n  // Get anomaly timeseries data (notebook style)\n  getAnomalyTimeseries: async (location: string = 'default'): Promise<AnomalyTimeseriesResponse> => {\n    const response = await api.get<APIResponse<AnomalyTimeseriesResponse>>(`/anomalies/timeseries?location=${location}`);\n    return response.data.data;\n  },\n\n  // Run anomaly detection\n  detectAnomalies: async (): Promise<any> => {\n    const response = await api.post<APIResponse<any>>('/anomalies/detect');\n    return response.data.data;\n  },\n\n  // Get AI insights\n  getAIInsights: async (): Promise<AIInsights> => {\n    const response = await api.get<APIResponse<AIInsights>>('/ai/insights');\n    return response.data.data;\n  },\n\n  // Get climate analysis\n  getClimateAnalysis: async (): Promise<{ analysis: string }> => {\n    const response = await api.get<APIResponse<{ analysis: string }>>('/ai/climate-analysis');\n    return response.data.data;\n  },\n\n  // Get dashboard summary\n  getDashboardSummary: async (): Promise<any> => {\n    const response = await api.get<APIResponse<any>>('/dashboard/summary');\n    return response.data.data;\n  },\n\n  // Chat with AI (RAG)\n  chatWithAI: async (message: string, context?: any): Promise<{ response: string; confidence?: number; sources?: string[] }> => {\n    const response = await api.post<APIResponse<any>>('/ai/chat', {\n      message,\n      context: context || null\n    });\n    return response.data.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}