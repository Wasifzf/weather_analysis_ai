{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wasif\\\\OneDrive\\\\Desktop\\\\weather app proj\\\\frontend\\\\src\\\\components\\\\WeatherTrends.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst WeatherTrends = ({\n  timeseriesData\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState('trends');\n  const [activeMetric, setActiveMetric] = useState('precipitation');\n  if (!timeseriesData || Object.keys(timeseriesData).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card animate-slide-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold text-gray-800 mb-4\",\n        children: \"\\uD83D\\uDCCA Weather Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8 text-gray-500\",\n        children: \"No weather data available. Click \\\"Run Detection\\\" to load data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Function to calculate annual averages and 10-year moving averages\n  const calculateTrendData = data => {\n    // Group data by year and calculate annual averages\n    const yearlyData = {};\n    data.dates.forEach((dateStr, index) => {\n      const year = new Date(dateStr).getFullYear();\n      if (!yearlyData[year]) {\n        yearlyData[year] = {\n          values: [],\n          count: 0\n        };\n      }\n      yearlyData[year].values.push(data.values[index]);\n      yearlyData[year].count++;\n    });\n\n    // Calculate annual averages\n    const years = Object.keys(yearlyData).map(Number).sort();\n    const annualValues = years.map(year => {\n      const sum = yearlyData[year].values.reduce((a, b) => a + b, 0);\n      return sum / yearlyData[year].values.length;\n    });\n\n    // Calculate 10-year moving averages\n    const movingAverages = [];\n    const window = 10;\n    for (let i = 0; i < annualValues.length; i++) {\n      if (i < window - 1) {\n        movingAverages.push(null); // Not enough data for moving average\n      } else {\n        const windowSum = annualValues.slice(i - window + 1, i + 1).reduce((a, b) => a + b, 0);\n        movingAverages.push(windowSum / window);\n      }\n    }\n    return {\n      years: years.map(year => year.toString()),\n      annualValues,\n      movingAverages: movingAverages.filter(val => val !== null),\n      movingAverageYears: years.slice(window - 1).map(year => year.toString())\n    };\n  };\n\n  // Function to calculate average temperature from max and min\n  const calculateAverageTemp = () => {\n    if (!timeseriesData.max_temperature || !timeseriesData.min_temperature) return null;\n    const maxTemp = timeseriesData.max_temperature;\n    const minTemp = timeseriesData.min_temperature;\n\n    // Calculate average temp for each date\n    const avgValues = maxTemp.values.map((maxVal, index) => (maxVal + minTemp.values[index]) / 2);\n    return {\n      dates: maxTemp.dates,\n      values: avgValues,\n      anomalies: [],\n      z_scores: [],\n      significant: [],\n      historical_avg: []\n    };\n  };\n\n  // Function to get only significant anomalies aggregated by year\n  const getSignificantAnomalies = data => {\n    const significantIndices = data.significant.map((isSignificant, index) => isSignificant ? index : -1).filter(index => index !== -1);\n\n    // Group significant anomalies by year\n    const yearlyAnomalies = {};\n    significantIndices.forEach(index => {\n      const date = data.dates[index];\n      const year = new Date(date).getFullYear();\n      if (!yearlyAnomalies[year]) {\n        yearlyAnomalies[year] = {\n          anomalies: [],\n          z_scores: [],\n          dates: []\n        };\n      }\n      yearlyAnomalies[year].anomalies.push(data.anomalies[index]);\n      yearlyAnomalies[year].z_scores.push(data.z_scores[index]);\n      yearlyAnomalies[year].dates.push(date);\n    });\n\n    // Get the most significant anomaly per year\n    const years = Object.keys(yearlyAnomalies).map(Number).sort();\n    const annualAnomalies = years.map(year => {\n      const yearData = yearlyAnomalies[year];\n      // Find the anomaly with highest absolute z-score for this year\n      const maxZScoreIndex = yearData.z_scores.reduce((maxIndex, zScore, index) => Math.abs(zScore) > Math.abs(yearData.z_scores[maxIndex]) ? index : maxIndex, 0);\n      return {\n        year: year.toString(),\n        anomaly: yearData.anomalies[maxZScoreIndex],\n        z_score: yearData.z_scores[maxZScoreIndex],\n        date: yearData.dates[maxZScoreIndex]\n      };\n    });\n    return annualAnomalies;\n  };\n\n  // Prepare data based on active tab\n  const getChartData = () => {\n    if (activeTab === 'trends') {\n      if (activeMetric === 'precipitation') {\n        if (!timeseriesData.precipitation) return {\n          labels: [],\n          datasets: []\n        };\n        const trendData = calculateTrendData(timeseriesData.precipitation);\n        return {\n          labels: trendData.years,\n          datasets: [{\n            label: 'Annual Precipitation',\n            data: trendData.annualValues,\n            borderColor: 'rgba(59, 130, 246, 0.4)',\n            backgroundColor: 'rgba(59, 130, 246, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 4,\n            borderWidth: 1,\n            fill: false\n          }, {\n            label: 'Precipitation (10Y Avg)',\n            data: trendData.movingAverageYears.map((year, index) => ({\n              x: year,\n              y: trendData.movingAverages[index]\n            })),\n            borderColor: '#059669',\n            backgroundColor: 'rgba(5, 150, 105, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 5,\n            borderWidth: 3,\n            fill: false\n          }]\n        };\n      } else {\n        // Temperature - show all three on same chart\n        const datasets = [];\n        let baseYears = [];\n        if (timeseriesData.max_temperature) {\n          const maxTempData = calculateTrendData(timeseriesData.max_temperature);\n          baseYears = maxTempData.years;\n          datasets.push({\n            label: 'Max Temperature',\n            data: maxTempData.annualValues,\n            borderColor: 'rgba(239, 68, 68, 0.4)',\n            backgroundColor: 'rgba(239, 68, 68, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 4,\n            borderWidth: 1,\n            fill: false\n          }, {\n            label: 'Max Temp (10Y Avg)',\n            data: maxTempData.movingAverageYears.map((year, index) => ({\n              x: year,\n              y: maxTempData.movingAverages[index]\n            })),\n            borderColor: '#dc2626',\n            backgroundColor: 'rgba(220, 38, 38, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 5,\n            borderWidth: 3,\n            fill: false\n          });\n        }\n        if (timeseriesData.min_temperature) {\n          const minTempData = calculateTrendData(timeseriesData.min_temperature);\n          datasets.push({\n            label: 'Min Temperature',\n            data: minTempData.annualValues,\n            borderColor: 'rgba(16, 185, 129, 0.4)',\n            backgroundColor: 'rgba(16, 185, 129, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 4,\n            borderWidth: 1,\n            fill: false\n          }, {\n            label: 'Min Temp (10Y Avg)',\n            data: minTempData.movingAverageYears.map((year, index) => ({\n              x: year,\n              y: minTempData.movingAverages[index]\n            })),\n            borderColor: '#059669',\n            backgroundColor: 'rgba(5, 150, 105, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 5,\n            borderWidth: 3,\n            fill: false\n          });\n        }\n\n        // Add average temperature\n        const avgTempData = calculateAverageTemp();\n        if (avgTempData) {\n          const avgTrendData = calculateTrendData(avgTempData);\n          datasets.push({\n            label: 'Mean Temperature',\n            data: avgTrendData.annualValues,\n            borderColor: 'rgba(107, 114, 128, 0.4)',\n            backgroundColor: 'rgba(107, 114, 128, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 4,\n            borderWidth: 1,\n            fill: false\n          }, {\n            label: 'Mean Temp (10Y Avg)',\n            data: avgTrendData.movingAverageYears.map((year, index) => ({\n              x: year,\n              y: avgTrendData.movingAverages[index]\n            })),\n            borderColor: '#6b7280',\n            backgroundColor: 'rgba(107, 114, 128, 0.1)',\n            tension: 0.1,\n            pointRadius: 0,\n            pointHoverRadius: 5,\n            borderWidth: 3,\n            fill: false\n          });\n        }\n        return {\n          labels: baseYears,\n          datasets\n        };\n      }\n    } else {\n      // Anomalies - show only significant anomalies per metric\n      if (activeMetric === 'precipitation' && timeseriesData.precipitation) {\n        const significantAnomalies = getSignificantAnomalies(timeseriesData.precipitation);\n        return {\n          labels: significantAnomalies.map(item => item.year),\n          datasets: [{\n            label: 'Significant Precipitation Anomalies',\n            data: significantAnomalies.map(item => item.anomaly),\n            borderColor: '#3b82f6',\n            backgroundColor: '#3b82f6',\n            tension: 0.1,\n            pointRadius: 6,\n            pointHoverRadius: 8,\n            borderWidth: 2,\n            fill: false,\n            showLine: false // Only show points, no connecting lines\n          }]\n        };\n      } else {\n        // Temperature anomalies - show all three types\n        const datasets = [];\n        let baseYears = [];\n        if (timeseriesData.max_temperature) {\n          const maxAnomalies = getSignificantAnomalies(timeseriesData.max_temperature);\n          baseYears = maxAnomalies.map(item => item.year);\n          datasets.push({\n            label: 'Max Temperature Anomalies',\n            data: maxAnomalies.map(item => ({\n              x: item.year,\n              y: item.anomaly\n            })),\n            borderColor: '#ef4444',\n            backgroundColor: '#ef4444',\n            tension: 0.1,\n            pointRadius: 6,\n            pointHoverRadius: 8,\n            borderWidth: 2,\n            fill: false,\n            showLine: false\n          });\n        }\n        if (timeseriesData.min_temperature) {\n          const minAnomalies = getSignificantAnomalies(timeseriesData.min_temperature);\n          datasets.push({\n            label: 'Min Temperature Anomalies',\n            data: minAnomalies.map(item => ({\n              x: item.year,\n              y: item.anomaly\n            })),\n            borderColor: '#10b981',\n            backgroundColor: '#10b981',\n            tension: 0.1,\n            pointRadius: 6,\n            pointHoverRadius: 8,\n            borderWidth: 2,\n            fill: false,\n            showLine: false\n          });\n        }\n        return {\n          labels: baseYears,\n          datasets\n        };\n      }\n    }\n  };\n  const chartData = getChartData();\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          color: '#374151',\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: activeTab === 'trends' ? activeMetric === 'precipitation' ? 'Annual Precipitation in Pakistan (1901–2024) with 10-Year Moving Average' : 'Average Annual Temperatures in Pakistan (1901–2024) with 10-Year Moving Average' : activeMetric === 'precipitation' ? 'Significant Precipitation Anomalies in Pakistan (1901-2024)' : 'Significant Temperature Anomalies in Pakistan (1901-2024)',\n        color: '#1f2937',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: context => {\n            return `Year: ${context[0].label}`;\n          },\n          label: context => {\n            const unit = activeMetric === 'precipitation' ? 'mm' : '°C';\n            if (activeTab === 'trends') {\n              return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit}`;\n            } else {\n              return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit} (Significant Anomaly)`;\n            }\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Year',\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280',\n          callback: function (value, index) {\n            // Show every 10th year for trends to avoid crowding\n            const year = parseInt(this.getLabelForValue(value));\n            return activeTab === 'trends' && year % 10 === 0 ? year : activeTab === 'anomalies' ? year : '';\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: activeTab === 'trends' ? `${activeMetric === 'precipitation' ? 'Precipitation (mm)' : 'Temperature (°C)'}` : `Anomaly (${activeMetric === 'precipitation' ? 'mm' : '°C'})`,\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280'\n        }\n      }\n    }\n  };\n\n  // Calculate summary statistics for anomalies\n  const getStats = () => {\n    if (activeTab !== 'anomalies') return null;\n    if (activeMetric === 'precipitation' && timeseriesData.precipitation) {\n      const significantAnomalies = getSignificantAnomalies(timeseriesData.precipitation);\n      return {\n        total: significantAnomalies.length,\n        positive: significantAnomalies.filter(a => a.anomaly > 0).length,\n        negative: significantAnomalies.filter(a => a.anomaly < 0).length\n      };\n    } else {\n      const maxAnomalies = timeseriesData.max_temperature ? getSignificantAnomalies(timeseriesData.max_temperature) : [];\n      const minAnomalies = timeseriesData.min_temperature ? getSignificantAnomalies(timeseriesData.min_temperature) : [];\n      return {\n        maxTemp: maxAnomalies.length,\n        minTemp: minAnomalies.length,\n        total: maxAnomalies.length + minAnomalies.length\n      };\n    }\n  };\n  const stats = getStats();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card animate-slide-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold text-gray-800\",\n        children: \"\\uD83D\\uDCCA Weather Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex bg-gray-100 rounded-lg p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('trends'),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeTab === 'trends' ? 'bg-blue-500 text-white shadow-sm' : 'text-gray-600 hover:text-gray-800'}`,\n          children: \"\\uD83D\\uDCC8 Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('anomalies'),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeTab === 'anomalies' ? 'bg-red-500 text-white shadow-sm' : 'text-gray-600 hover:text-gray-800'}`,\n          children: \"\\uD83D\\uDEA8 Anomalies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex bg-gray-50 rounded-lg p-1 gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveMetric('precipitation'),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeMetric === 'precipitation' ? 'bg-blue-500 text-white shadow-sm' : 'text-gray-600 hover:text-gray-800'}`,\n          children: \"\\uD83C\\uDF27\\uFE0F Precipitation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveMetric('temperature'),\n          className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeMetric === 'temperature' ? 'bg-red-500 text-white shadow-sm' : 'text-gray-600 hover:text-gray-800'}`,\n          children: \"\\uD83C\\uDF21\\uFE0F Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-96 mb-6\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this), activeTab === 'anomalies' && stats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 bg-gray-50 p-4 rounded-lg\",\n      children: activeMetric === 'precipitation' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700\",\n            children: \"Total Significant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold text-blue-600\",\n            children: stats.total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Anomalies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700\",\n            children: \"Wet Anomalies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold text-green-600\",\n            children: stats.positive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Above normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700\",\n            children: \"Dry Anomalies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold text-red-600\",\n            children: stats.negative\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Below normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700\",\n            children: \"Max Temp Anomalies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold text-red-600\",\n            children: stats.maxTemp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Significant events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700\",\n            children: \"Min Temp Anomalies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold text-green-600\",\n            children: stats.minTemp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Significant events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700\",\n            children: \"Detection Threshold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold text-gray-600\",\n            children: \"|Z| \\u2265 2.0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: \"Statistical significance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 9\n    }, this), activeTab === 'trends' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 p-4 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-gray-700\",\n          children: \"Long-term Climate Trends (1901-2024)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-2\",\n          children: activeMetric === 'precipitation' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"\\uD83D\\uDCC8 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Annual Data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 22\n            }, this), \" Light line shows yearly averages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 84\n            }, this), \"\\uD83D\\uDCCA \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"10-Year Moving Average:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 20\n            }, this), \" Bold line shows smoothed long-term trends\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"\\uD83C\\uDF21\\uFE0F \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Combined View:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 23\n            }, this), \" Max, Min, and Mean temperatures with 10-year moving averages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 115\n            }, this), \"\\uD83D\\uDCCA \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Climate Patterns:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 20\n            }, this), \" Bold lines show long-term warming trends\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm text-gray-600\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: activeTab === 'trends' ? activeMetric === 'precipitation' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Trends View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this), \" Shows annual precipitation averages and 10-year moving averages to reveal long-term climate patterns.\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Temperature Trends:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 17\n          }, this), \" Shows max, min, and mean annual temperatures with 10-year smoothing to reveal warming patterns.\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Anomalies View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 15\n          }, this), \" Shows only statistically significant anomalies (|Z-score| \\u2265 2.0) - one per year when they occur. These are actual climate anomalies, not normal variations.\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 504,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherTrends, \"yfql4bWz549g+bUnP24aUCrvFYA=\");\n_c = WeatherTrends;\nexport default WeatherTrends;\nvar _c;\n$RefreshReg$(_c, \"WeatherTrends\");","map":{"version":3,"names":["React","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","register","WeatherTrends","timeseriesData","_s","activeTab","setActiveTab","activeMetric","setActiveMetric","Object","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateTrendData","data","yearlyData","dates","forEach","dateStr","index","year","Date","getFullYear","values","count","push","years","map","Number","sort","annualValues","sum","reduce","a","b","movingAverages","window","i","windowSum","slice","toString","filter","val","movingAverageYears","calculateAverageTemp","max_temperature","min_temperature","maxTemp","minTemp","avgValues","maxVal","anomalies","z_scores","significant","historical_avg","getSignificantAnomalies","significantIndices","isSignificant","yearlyAnomalies","date","annualAnomalies","yearData","maxZScoreIndex","maxIndex","zScore","Math","abs","anomaly","z_score","getChartData","precipitation","labels","datasets","trendData","label","borderColor","backgroundColor","tension","pointRadius","pointHoverRadius","borderWidth","fill","x","y","baseYears","maxTempData","minTempData","avgTempData","avgTrendData","significantAnomalies","item","showLine","maxAnomalies","minAnomalies","chartData","options","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","legend","position","color","font","size","title","display","text","weight","tooltip","callbacks","context","unit","dataset","parsed","toFixed","scales","type","grid","lineWidth","ticks","callback","value","parseInt","getLabelForValue","getStats","total","positive","negative","stats","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wasif/OneDrive/Desktop/weather app proj/frontend/src/components/WeatherTrends.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\ninterface TimeseriesData {\n  dates: string[];\n  anomalies: number[];\n  z_scores: number[];\n  significant: boolean[];\n  values: number[];\n  historical_avg: number[];\n}\n\ninterface WeatherTrendsProps {\n  timeseriesData: {\n    precipitation?: TimeseriesData;\n    max_temperature?: TimeseriesData;\n    min_temperature?: TimeseriesData;\n  };\n}\n\nconst WeatherTrends: React.FC<WeatherTrendsProps> = ({ timeseriesData }) => {\n  const [activeTab, setActiveTab] = useState<'trends' | 'anomalies'>('trends');\n  const [activeMetric, setActiveMetric] = useState<'precipitation' | 'temperature'>('precipitation');\n\n  if (!timeseriesData || Object.keys(timeseriesData).length === 0) {\n    return (\n      <div className=\"card animate-slide-up\">\n        <h3 className=\"text-xl font-bold text-gray-800 mb-4\">\n          📊 Weather Analysis\n        </h3>\n        <div className=\"text-center py-8 text-gray-500\">\n          No weather data available. Click \"Run Detection\" to load data.\n        </div>\n      </div>\n    );\n  }\n\n  // Function to calculate annual averages and 10-year moving averages\n  const calculateTrendData = (data: TimeseriesData) => {\n    // Group data by year and calculate annual averages\n    const yearlyData: { [year: number]: { values: number[], count: number } } = {};\n    \n    data.dates.forEach((dateStr, index) => {\n      const year = new Date(dateStr).getFullYear();\n      if (!yearlyData[year]) {\n        yearlyData[year] = { values: [], count: 0 };\n      }\n      yearlyData[year].values.push(data.values[index]);\n      yearlyData[year].count++;\n    });\n\n    // Calculate annual averages\n    const years = Object.keys(yearlyData).map(Number).sort();\n    const annualValues = years.map(year => {\n      const sum = yearlyData[year].values.reduce((a, b) => a + b, 0);\n      return sum / yearlyData[year].values.length;\n    });\n\n    // Calculate 10-year moving averages\n    const movingAverages = [];\n    const window = 10;\n    \n    for (let i = 0; i < annualValues.length; i++) {\n      if (i < window - 1) {\n        movingAverages.push(null); // Not enough data for moving average\n      } else {\n        const windowSum = annualValues.slice(i - window + 1, i + 1).reduce((a, b) => a + b, 0);\n        movingAverages.push(windowSum / window);\n      }\n    }\n\n    return {\n      years: years.map(year => year.toString()),\n      annualValues,\n      movingAverages: movingAverages.filter(val => val !== null),\n      movingAverageYears: years.slice(window - 1).map(year => year.toString())\n    };\n  };\n\n  // Function to calculate average temperature from max and min\n  const calculateAverageTemp = () => {\n    if (!timeseriesData.max_temperature || !timeseriesData.min_temperature) return null;\n    \n    const maxTemp = timeseriesData.max_temperature;\n    const minTemp = timeseriesData.min_temperature;\n    \n    // Calculate average temp for each date\n    const avgValues = maxTemp.values.map((maxVal, index) => (maxVal + minTemp.values[index]) / 2);\n    \n    return {\n      dates: maxTemp.dates,\n      values: avgValues,\n      anomalies: [],\n      z_scores: [],\n      significant: [],\n      historical_avg: []\n    };\n  };\n\n  // Function to get only significant anomalies aggregated by year\n  const getSignificantAnomalies = (data: TimeseriesData) => {\n    const significantIndices = data.significant\n      .map((isSignificant, index) => isSignificant ? index : -1)\n      .filter(index => index !== -1);\n\n    // Group significant anomalies by year\n    const yearlyAnomalies: { [year: number]: { anomalies: number[], z_scores: number[], dates: string[] } } = {};\n    \n    significantIndices.forEach(index => {\n      const date = data.dates[index];\n      const year = new Date(date).getFullYear();\n      \n      if (!yearlyAnomalies[year]) {\n        yearlyAnomalies[year] = { anomalies: [], z_scores: [], dates: [] };\n      }\n      \n      yearlyAnomalies[year].anomalies.push(data.anomalies[index]);\n      yearlyAnomalies[year].z_scores.push(data.z_scores[index]);\n      yearlyAnomalies[year].dates.push(date);\n    });\n\n    // Get the most significant anomaly per year\n    const years = Object.keys(yearlyAnomalies).map(Number).sort();\n    const annualAnomalies = years.map(year => {\n      const yearData = yearlyAnomalies[year];\n      // Find the anomaly with highest absolute z-score for this year\n      const maxZScoreIndex = yearData.z_scores.reduce((maxIndex, zScore, index) => \n        Math.abs(zScore) > Math.abs(yearData.z_scores[maxIndex]) ? index : maxIndex, 0);\n      \n      return {\n        year: year.toString(),\n        anomaly: yearData.anomalies[maxZScoreIndex],\n        z_score: yearData.z_scores[maxZScoreIndex],\n        date: yearData.dates[maxZScoreIndex]\n      };\n    });\n\n    return annualAnomalies;\n  };\n\n  // Prepare data based on active tab\n  const getChartData = () => {\n    if (activeTab === 'trends') {\n      if (activeMetric === 'precipitation') {\n        if (!timeseriesData.precipitation) return { labels: [], datasets: [] };\n        \n        const trendData = calculateTrendData(timeseriesData.precipitation);\n        \n        return {\n          labels: trendData.years,\n          datasets: [\n            {\n              label: 'Annual Precipitation',\n              data: trendData.annualValues,\n              borderColor: 'rgba(59, 130, 246, 0.4)',\n              backgroundColor: 'rgba(59, 130, 246, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Precipitation (10Y Avg)',\n              data: trendData.movingAverageYears.map((year, index) => ({\n                x: year,\n                y: trendData.movingAverages[index]\n              })),\n              borderColor: '#059669',\n              backgroundColor: 'rgba(5, 150, 105, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          ]\n        };\n      } else {\n        // Temperature - show all three on same chart\n        const datasets = [];\n        let baseYears: string[] = [];\n        \n        if (timeseriesData.max_temperature) {\n          const maxTempData = calculateTrendData(timeseriesData.max_temperature);\n          baseYears = maxTempData.years;\n          \n          datasets.push(\n            {\n              label: 'Max Temperature',\n              data: maxTempData.annualValues,\n              borderColor: 'rgba(239, 68, 68, 0.4)',\n              backgroundColor: 'rgba(239, 68, 68, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Max Temp (10Y Avg)',\n              data: maxTempData.movingAverageYears.map((year, index) => ({\n                x: year,\n                y: maxTempData.movingAverages[index]\n              })),\n              borderColor: '#dc2626',\n              backgroundColor: 'rgba(220, 38, 38, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          );\n        }\n        \n        if (timeseriesData.min_temperature) {\n          const minTempData = calculateTrendData(timeseriesData.min_temperature);\n          \n          datasets.push(\n            {\n              label: 'Min Temperature',\n              data: minTempData.annualValues,\n              borderColor: 'rgba(16, 185, 129, 0.4)',\n              backgroundColor: 'rgba(16, 185, 129, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Min Temp (10Y Avg)',\n              data: minTempData.movingAverageYears.map((year, index) => ({\n                x: year,\n                y: minTempData.movingAverages[index]\n              })),\n              borderColor: '#059669',\n              backgroundColor: 'rgba(5, 150, 105, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          );\n        }\n        \n        // Add average temperature\n        const avgTempData = calculateAverageTemp();\n        if (avgTempData) {\n          const avgTrendData = calculateTrendData(avgTempData);\n          \n          datasets.push(\n            {\n              label: 'Mean Temperature',\n              data: avgTrendData.annualValues,\n              borderColor: 'rgba(107, 114, 128, 0.4)',\n              backgroundColor: 'rgba(107, 114, 128, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Mean Temp (10Y Avg)',\n              data: avgTrendData.movingAverageYears.map((year, index) => ({\n                x: year,\n                y: avgTrendData.movingAverages[index]\n              })),\n              borderColor: '#6b7280',\n              backgroundColor: 'rgba(107, 114, 128, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          );\n        }\n        \n        return {\n          labels: baseYears,\n          datasets\n        };\n      }\n    } else {\n      // Anomalies - show only significant anomalies per metric\n      if (activeMetric === 'precipitation' && timeseriesData.precipitation) {\n        const significantAnomalies = getSignificantAnomalies(timeseriesData.precipitation);\n        \n        return {\n          labels: significantAnomalies.map(item => item.year),\n          datasets: [\n            {\n              label: 'Significant Precipitation Anomalies',\n              data: significantAnomalies.map(item => item.anomaly),\n              borderColor: '#3b82f6',\n              backgroundColor: '#3b82f6',\n              tension: 0.1,\n              pointRadius: 6,\n              pointHoverRadius: 8,\n              borderWidth: 2,\n              fill: false,\n              showLine: false, // Only show points, no connecting lines\n            }\n          ]\n        };\n      } else {\n        // Temperature anomalies - show all three types\n        const datasets = [];\n        let baseYears: string[] = [];\n        \n        if (timeseriesData.max_temperature) {\n          const maxAnomalies = getSignificantAnomalies(timeseriesData.max_temperature);\n          baseYears = maxAnomalies.map(item => item.year);\n          \n          datasets.push({\n            label: 'Max Temperature Anomalies',\n            data: maxAnomalies.map(item => ({ x: item.year, y: item.anomaly })),\n            borderColor: '#ef4444',\n            backgroundColor: '#ef4444',\n            tension: 0.1,\n            pointRadius: 6,\n            pointHoverRadius: 8,\n            borderWidth: 2,\n            fill: false,\n            showLine: false,\n          });\n        }\n        \n        if (timeseriesData.min_temperature) {\n          const minAnomalies = getSignificantAnomalies(timeseriesData.min_temperature);\n          \n          datasets.push({\n            label: 'Min Temperature Anomalies',\n            data: minAnomalies.map(item => ({ x: item.year, y: item.anomaly })),\n            borderColor: '#10b981',\n            backgroundColor: '#10b981',\n            tension: 0.1,\n            pointRadius: 6,\n            pointHoverRadius: 8,\n            borderWidth: 2,\n            fill: false,\n            showLine: false,\n          });\n        }\n        \n        return {\n          labels: baseYears,\n          datasets\n        };\n      }\n    }\n  };\n\n  const chartData = getChartData();\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index' as const,\n      intersect: false,\n    },\n    plugins: {\n      legend: {\n        position: 'top' as const,\n        labels: {\n          color: '#374151',\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: activeTab === 'trends' ? \n          (activeMetric === 'precipitation' ? \n            'Annual Precipitation in Pakistan (1901–2024) with 10-Year Moving Average' : \n            'Average Annual Temperatures in Pakistan (1901–2024) with 10-Year Moving Average') :\n          (activeMetric === 'precipitation' ? \n            'Significant Precipitation Anomalies in Pakistan (1901-2024)' :\n            'Significant Temperature Anomalies in Pakistan (1901-2024)'),\n        color: '#1f2937',\n        font: {\n          size: 16,\n          weight: 'bold' as const\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: (context: any) => {\n            return `Year: ${context[0].label}`;\n          },\n          label: (context: any) => {\n            const unit = activeMetric === 'precipitation' ? 'mm' : '°C';\n            \n            if (activeTab === 'trends') {\n              return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit}`;\n            } else {\n              return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit} (Significant Anomaly)`;\n            }\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'category' as const,\n        title: {\n          display: true,\n          text: 'Year',\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280',\n          callback: function(value: any, index: number) {\n            // Show every 10th year for trends to avoid crowding\n            const year = parseInt(this.getLabelForValue(value));\n            return activeTab === 'trends' && year % 10 === 0 ? year : (activeTab === 'anomalies' ? year : '');\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: activeTab === 'trends' ? \n            `${activeMetric === 'precipitation' ? 'Precipitation (mm)' : 'Temperature (°C)'}` :\n            `Anomaly (${activeMetric === 'precipitation' ? 'mm' : '°C'})`,\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280'\n        }\n      }\n    }\n  };\n\n  // Calculate summary statistics for anomalies\n  const getStats = () => {\n    if (activeTab !== 'anomalies') return null;\n    \n    if (activeMetric === 'precipitation' && timeseriesData.precipitation) {\n      const significantAnomalies = getSignificantAnomalies(timeseriesData.precipitation);\n      return {\n        total: significantAnomalies.length,\n        positive: significantAnomalies.filter(a => a.anomaly > 0).length,\n        negative: significantAnomalies.filter(a => a.anomaly < 0).length\n      };\n    } else {\n      const maxAnomalies = timeseriesData.max_temperature ? getSignificantAnomalies(timeseriesData.max_temperature) : [];\n      const minAnomalies = timeseriesData.min_temperature ? getSignificantAnomalies(timeseriesData.min_temperature) : [];\n      \n      return {\n        maxTemp: maxAnomalies.length,\n        minTemp: minAnomalies.length,\n        total: maxAnomalies.length + minAnomalies.length\n      };\n    }\n  };\n\n  const stats = getStats();\n\n  return (\n    <div className=\"card animate-slide-up\">\n      {/* Header with tabs */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4\">\n        <h3 className=\"text-xl font-bold text-gray-800\">\n          📊 Weather Analysis Dashboard\n        </h3>\n        \n        {/* View Toggle */}\n        <div className=\"flex bg-gray-100 rounded-lg p-1\">\n          <button\n            onClick={() => setActiveTab('trends')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeTab === 'trends'\n                ? 'bg-blue-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            📈 Trends\n          </button>\n          <button\n            onClick={() => setActiveTab('anomalies')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeTab === 'anomalies'\n                ? 'bg-red-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            🚨 Anomalies\n          </button>\n        </div>\n      </div>\n\n      {/* Metric selector */}\n      <div className=\"flex justify-center mb-6\">\n        <div className=\"flex bg-gray-50 rounded-lg p-1 gap-1\">\n          <button\n            onClick={() => setActiveMetric('precipitation')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeMetric === 'precipitation'\n                ? 'bg-blue-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            🌧️ Precipitation\n          </button>\n          <button\n            onClick={() => setActiveMetric('temperature')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeMetric === 'temperature'\n                ? 'bg-red-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            🌡️ Temperature\n          </button>\n        </div>\n      </div>\n\n      {/* Chart */}\n      <div className=\"h-96 mb-6\">\n        <Line data={chartData} options={options} />\n      </div>\n\n      {/* Summary Statistics */}\n      {activeTab === 'anomalies' && stats && (\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 bg-gray-50 p-4 rounded-lg\">\n          {activeMetric === 'precipitation' ? (\n            <>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Total Significant</p>\n                <p className=\"text-2xl font-bold text-blue-600\">{stats.total}</p>\n                <p className=\"text-xs text-gray-500\">Anomalies</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Wet Anomalies</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.positive}</p>\n                <p className=\"text-xs text-gray-500\">Above normal</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Dry Anomalies</p>\n                <p className=\"text-2xl font-bold text-red-600\">{stats.negative}</p>\n                <p className=\"text-xs text-gray-500\">Below normal</p>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Max Temp Anomalies</p>\n                <p className=\"text-2xl font-bold text-red-600\">{stats.maxTemp}</p>\n                <p className=\"text-xs text-gray-500\">Significant events</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Min Temp Anomalies</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.minTemp}</p>\n                <p className=\"text-xs text-gray-500\">Significant events</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Detection Threshold</p>\n                <p className=\"text-2xl font-bold text-gray-600\">|Z| ≥ 2.0</p>\n                <p className=\"text-xs text-gray-500\">Statistical significance</p>\n              </div>\n            </>\n          )}\n        </div>\n      )}\n\n      {/* Trend Statistics */}\n      {activeTab === 'trends' && (\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <div className=\"text-center\">\n            <p className=\"font-semibold text-gray-700\">Long-term Climate Trends (1901-2024)</p>\n            <p className=\"text-sm text-gray-600 mt-2\">\n              {activeMetric === 'precipitation' ? (\n                <>📈 <strong>Annual Data:</strong> Light line shows yearly averages<br/>\n                📊 <strong>10-Year Moving Average:</strong> Bold line shows smoothed long-term trends</>\n              ) : (\n                <>🌡️ <strong>Combined View:</strong> Max, Min, and Mean temperatures with 10-year moving averages<br/>\n                📊 <strong>Climate Patterns:</strong> Bold lines show long-term warming trends</>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Explanation */}\n      <div className=\"mt-4 text-sm text-gray-600\">\n        <p>\n          {activeTab === 'trends' ? (\n            activeMetric === 'precipitation' ? \n              <><strong>Trends View:</strong> Shows annual precipitation averages and 10-year moving averages to reveal long-term climate patterns.</> :\n              <><strong>Temperature Trends:</strong> Shows max, min, and mean annual temperatures with 10-year smoothing to reveal warming patterns.</>\n          ) : (\n            <><strong>Anomalies View:</strong> Shows only statistically significant anomalies (|Z-score| ≥ 2.0) - one per year when they occur. These are actual climate anomalies, not normal variations.</>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherTrends; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}