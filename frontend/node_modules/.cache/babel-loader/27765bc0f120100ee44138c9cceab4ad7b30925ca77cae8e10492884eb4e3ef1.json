{"ast":null,"code":"import React,{useState}from'react';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,TimeScale}from'chart.js';import{Line}from'react-chartjs-2';import'chartjs-adapter-date-fns';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,TimeScale);const WeatherTrends=_ref=>{let{timeseriesData}=_ref;const[activeTab,setActiveTab]=useState('trends');const[activeMetric,setActiveMetric]=useState('precipitation');if(!timeseriesData||Object.keys(timeseriesData).length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"card animate-slide-up\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-800 mb-4\",children:\"\\uD83D\\uDCCA Weather Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8 text-gray-500\",children:\"No weather data available. Click \\\"Run Detection\\\" to load data.\"})]});}// Function to calculate annual averages and 10-year moving averages\nconst calculateTrendData=data=>{// Group data by year and calculate annual averages\nconst yearlyData={};data.dates.forEach((dateStr,index)=>{const year=new Date(dateStr).getFullYear();if(!yearlyData[year]){yearlyData[year]={values:[],count:0};}yearlyData[year].values.push(data.values[index]);yearlyData[year].count++;});// Calculate annual averages\nconst years=Object.keys(yearlyData).map(Number).sort();const annualValues=years.map(year=>{const sum=yearlyData[year].values.reduce((a,b)=>a+b,0);return sum/yearlyData[year].values.length;});// Calculate 10-year moving averages\nconst movingAverages=[];const window=10;for(let i=0;i<annualValues.length;i++){if(i<window-1){movingAverages.push(null);// Not enough data for moving average\n}else{const windowSum=annualValues.slice(i-window+1,i+1).reduce((a,b)=>a+b,0);movingAverages.push(windowSum/window);}}return{years:years.map(year=>year.toString()),annualValues,movingAverages:movingAverages.filter(val=>val!==null),movingAverageYears:years.slice(window-1).map(year=>year.toString())};};// Function to calculate average temperature from max and min\nconst calculateAverageTemp=()=>{if(!timeseriesData.max_temperature||!timeseriesData.min_temperature)return null;const maxTemp=timeseriesData.max_temperature;const minTemp=timeseriesData.min_temperature;// Calculate average temp for each date\nconst avgValues=maxTemp.values.map((maxVal,index)=>(maxVal+minTemp.values[index])/2);return{dates:maxTemp.dates,values:avgValues,anomalies:[],z_scores:[],significant:[],historical_avg:[]};};// Function to get only significant anomalies aggregated by year\nconst getSignificantAnomalies=data=>{const significantIndices=data.significant.map((isSignificant,index)=>isSignificant?index:-1).filter(index=>index!==-1);// Group significant anomalies by year\nconst yearlyAnomalies={};significantIndices.forEach(index=>{const date=data.dates[index];const year=new Date(date).getFullYear();if(!yearlyAnomalies[year]){yearlyAnomalies[year]={anomalies:[],z_scores:[],dates:[]};}yearlyAnomalies[year].anomalies.push(data.anomalies[index]);yearlyAnomalies[year].z_scores.push(data.z_scores[index]);yearlyAnomalies[year].dates.push(date);});// Get the most significant anomaly per year\nconst years=Object.keys(yearlyAnomalies).map(Number).sort();const annualAnomalies=years.map(year=>{const yearData=yearlyAnomalies[year];// Find the anomaly with highest absolute z-score for this year\nconst maxZScoreIndex=yearData.z_scores.reduce((maxIndex,zScore,index)=>Math.abs(zScore)>Math.abs(yearData.z_scores[maxIndex])?index:maxIndex,0);return{year:year.toString(),anomaly:yearData.anomalies[maxZScoreIndex],z_score:yearData.z_scores[maxZScoreIndex],date:yearData.dates[maxZScoreIndex]};});return annualAnomalies;};// Prepare data based on active tab\nconst getChartData=()=>{if(activeTab==='trends'){if(activeMetric==='precipitation'){if(!timeseriesData.precipitation)return{labels:[],datasets:[]};const trendData=calculateTrendData(timeseriesData.precipitation);return{labels:trendData.years,datasets:[{label:'Annual Precipitation',data:trendData.annualValues,borderColor:'rgba(59, 130, 246, 0.4)',backgroundColor:'rgba(59, 130, 246, 0.1)',tension:0.1,pointRadius:0,pointHoverRadius:4,borderWidth:1,fill:false},{label:'Precipitation (10Y Avg)',data:trendData.movingAverages,borderColor:'#059669',backgroundColor:'rgba(5, 150, 105, 0.1)',tension:0.1,pointRadius:0,pointHoverRadius:5,borderWidth:3,fill:false}]};}else{// Temperature - show all three on same chart\nconst datasets=[];let baseYears=[];if(timeseriesData.max_temperature){const maxTempData=calculateTrendData(timeseriesData.max_temperature);baseYears=maxTempData.years;datasets.push({label:'Max Temperature',data:maxTempData.annualValues,borderColor:'rgba(239, 68, 68, 0.4)',backgroundColor:'rgba(239, 68, 68, 0.1)',tension:0.1,pointRadius:0,pointHoverRadius:4,borderWidth:1,fill:false},{label:'Max Temp (10Y Avg)',data:maxTempData.movingAverages,borderColor:'#dc2626',backgroundColor:'rgba(220, 38, 38, 0.1)',tension:0.1,pointRadius:0,pointHoverRadius:5,borderWidth:3,fill:false});}if(timeseriesData.min_temperature){const minTempData=calculateTrendData(timeseriesData.min_temperature);datasets.push({label:'Min Temperature',data:minTempData.annualValues,borderColor:'rgba(16, 185, 129, 0.4)',backgroundColor:'rgba(16, 185, 129, 0.1)',tension:0.1,pointRadius:0,pointHoverRadius:4,borderWidth:1,fill:false},{label:'Min Temp (10Y Avg)',data:minTempData.movingAverages,borderColor:'#059669',backgroundColor:'rgba(5, 150, 105, 0.1)',tension:0.1,pointRadius:0,pointHoverRadius:5,borderWidth:3,fill:false});}// Add average temperature\nconst avgTempData=calculateAverageTemp();if(avgTempData){const avgTrendData=calculateTrendData(avgTempData);datasets.push({label:'Mean Temperature',data:avgTrendData.annualValues,borderColor:'rgba(107, 114, 128, 0.4)',backgroundColor:'rgba(107, 114, 128, 0.1)',tension:0.1,pointRadius:0,pointHoverRadius:4,borderWidth:1,fill:false},{label:'Mean Temp (10Y Avg)',data:avgTrendData.movingAverages,borderColor:'#6b7280',backgroundColor:'rgba(107, 114, 128, 0.1)',tension:0.1,pointRadius:0,pointHoverRadius:5,borderWidth:3,fill:false});}return{labels:baseYears,datasets};}}else{// Anomalies - show only significant anomalies per metric\nif(activeMetric==='precipitation'&&timeseriesData.precipitation){const significantAnomalies=getSignificantAnomalies(timeseriesData.precipitation);// Create a dataset with y values only at anomaly years, null elsewhere\nconst trendData=calculateTrendData(timeseriesData.precipitation);const anomalyPoints=trendData.years.map(year=>{const found=significantAnomalies.find(a=>a.year===year);return found?found.anomaly:null;});return{labels:trendData.years,datasets:[{label:'Significant Precipitation Anomalies',data:anomalyPoints,borderColor:'#3b82f6',backgroundColor:'#3b82f6',pointRadius:anomalyPoints.map(v=>v!==null?6:0),pointHoverRadius:anomalyPoints.map(v=>v!==null?8:0),showLine:false,fill:false,tension:0.1,borderWidth:2}]};}else{// Temperature anomalies - show all three types\nconst datasets=[];let baseYears=[];if(timeseriesData.max_temperature){const maxAnomalies=getSignificantAnomalies(timeseriesData.max_temperature);const maxTrendData=calculateTrendData(timeseriesData.max_temperature);baseYears=maxTrendData.years;const maxPoints=maxTrendData.years.map(year=>{const found=maxAnomalies.find(a=>a.year===year);return found?found.anomaly:null;});datasets.push({label:'Max Temperature Anomalies',data:maxPoints,borderColor:'#ef4444',backgroundColor:'#ef4444',pointRadius:maxPoints.map(v=>v!==null?6:0),pointHoverRadius:maxPoints.map(v=>v!==null?8:0),showLine:false,fill:false,tension:0.1,borderWidth:2});}if(timeseriesData.min_temperature){const minAnomalies=getSignificantAnomalies(timeseriesData.min_temperature);const minTrendData=calculateTrendData(timeseriesData.min_temperature);const minPoints=minTrendData.years.map(year=>{const found=minAnomalies.find(a=>a.year===year);return found?found.anomaly:null;});datasets.push({label:'Min Temperature Anomalies',data:minPoints,borderColor:'#10b981',backgroundColor:'#10b981',pointRadius:minPoints.map(v=>v!==null?6:0),pointHoverRadius:minPoints.map(v=>v!==null?8:0),showLine:false,fill:false,tension:0.1,borderWidth:2});}return{labels:baseYears,datasets};}}};const chartData=getChartData();const options={responsive:true,maintainAspectRatio:false,interaction:{mode:'index',intersect:false},plugins:{legend:{position:'top',labels:{color:'#374151',font:{size:12}}},title:{display:true,text:activeTab==='trends'?activeMetric==='precipitation'?'Annual Precipitation in Pakistan (1901–2024) with 10-Year Moving Average':'Average Annual Temperatures in Pakistan (1901–2024) with 10-Year Moving Average':activeMetric==='precipitation'?'Significant Precipitation Anomalies in Pakistan (1901-2024)':'Significant Temperature Anomalies in Pakistan (1901-2024)',color:'#1f2937',font:{size:16,weight:'bold'}},tooltip:{callbacks:{title:context=>{return`Year: ${context[0].label}`;},label:context=>{const unit=activeMetric==='precipitation'?'mm':'°C';if(activeTab==='trends'){return`${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit}`;}else{return`${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit} (Significant Anomaly)`;}}}}},scales:{x:{type:'category',title:{display:true,text:'Year',color:'#374151',font:{size:14}},grid:{color:'#e5e7eb',lineWidth:0.5},ticks:{color:'#6b7280',callback:function(value,index){// Show every 10th year for trends to avoid crowding\nconst year=parseInt(this.getLabelForValue(value));return activeTab==='trends'&&year%10===0?year:activeTab==='anomalies'?year:'';}}},y:{title:{display:true,text:activeTab==='trends'?`${activeMetric==='precipitation'?'Precipitation (mm)':'Temperature (°C)'}`:`Anomaly (${activeMetric==='precipitation'?'mm':'°C'})`,color:'#374151',font:{size:14}},grid:{color:'#e5e7eb',lineWidth:0.5},ticks:{color:'#6b7280'}}}};// Calculate summary statistics for anomalies\nconst getStats=()=>{if(activeTab!=='anomalies')return null;if(activeMetric==='precipitation'&&timeseriesData.precipitation){const significantAnomalies=getSignificantAnomalies(timeseriesData.precipitation);return{total:significantAnomalies.length,positive:significantAnomalies.filter(a=>a.anomaly>0).length,negative:significantAnomalies.filter(a=>a.anomaly<0).length};}else{const maxAnomalies=timeseriesData.max_temperature?getSignificantAnomalies(timeseriesData.max_temperature):[];const minAnomalies=timeseriesData.min_temperature?getSignificantAnomalies(timeseriesData.min_temperature):[];return{maxTemp:maxAnomalies.length,minTemp:minAnomalies.length,total:maxAnomalies.length+minAnomalies.length};}};const stats=getStats();return/*#__PURE__*/_jsxs(\"div\",{className:\"card animate-slide-up\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-800\",children:\"\\uD83D\\uDCCA Weather Analysis Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex bg-gray-100 rounded-lg p-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('trends'),className:`px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeTab==='trends'?'bg-blue-500 text-white shadow-sm':'text-gray-600 hover:text-gray-800'}`,children:\"\\uD83D\\uDCC8 Trends\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('anomalies'),className:`px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeTab==='anomalies'?'bg-red-500 text-white shadow-sm':'text-gray-600 hover:text-gray-800'}`,children:\"\\uD83D\\uDEA8 Anomalies\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex bg-gray-50 rounded-lg p-1 gap-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveMetric('precipitation'),className:`px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeMetric==='precipitation'?'bg-blue-500 text-white shadow-sm':'text-gray-600 hover:text-gray-800'}`,children:\"\\uD83C\\uDF27\\uFE0F Precipitation\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveMetric('temperature'),className:`px-4 py-2 rounded-md text-sm font-medium transition-colors ${activeMetric==='temperature'?'bg-red-500 text-white shadow-sm':'text-gray-600 hover:text-gray-800'}`,children:\"\\uD83C\\uDF21\\uFE0F Temperature\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"h-96 mb-6\",children:/*#__PURE__*/_jsx(Line,{data:chartData,options:options})}),activeTab==='anomalies'&&stats&&/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 bg-gray-50 p-4 rounded-lg\",children:activeMetric==='precipitation'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-gray-700\",children:\"Total Significant\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-blue-600\",children:stats.total}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"Anomalies\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-gray-700\",children:\"Wet Anomalies\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-green-600\",children:stats.positive}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"Above normal\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-gray-700\",children:\"Dry Anomalies\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-red-600\",children:stats.negative}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"Below normal\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-gray-700\",children:\"Max Temp Anomalies\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-red-600\",children:stats.maxTemp}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"Significant events\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-gray-700\",children:\"Min Temp Anomalies\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-green-600\",children:stats.minTemp}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"Significant events\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-gray-700\",children:\"Detection Threshold\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-gray-600\",children:\"|Z| \\u2265 2.0\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"Statistical significance\"})]})]})}),activeTab==='trends'&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-gray-700\",children:\"Long-term Climate Trends (1901-2024)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mt-2\",children:activeMetric==='precipitation'?/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\uD83D\\uDCC8 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Annual Data:\"}),\" Light line shows yearly averages\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD83D\\uDCCA \",/*#__PURE__*/_jsx(\"strong\",{children:\"10-Year Moving Average:\"}),\" Bold line shows smoothed long-term trends\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\uD83C\\uDF21\\uFE0F \",/*#__PURE__*/_jsx(\"strong\",{children:\"Combined View:\"}),\" Max, Min, and Mean temperatures with 10-year moving averages\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD83D\\uDCCA \",/*#__PURE__*/_jsx(\"strong\",{children:\"Climate Patterns:\"}),\" Bold lines show long-term warming trends\"]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 text-sm text-gray-600\",children:/*#__PURE__*/_jsx(\"p\",{children:activeTab==='trends'?activeMetric==='precipitation'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Trends View:\"}),\" Shows annual precipitation averages and 10-year moving averages to reveal long-term climate patterns.\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Temperature Trends:\"}),\" Shows max, min, and mean annual temperatures with 10-year smoothing to reveal warming patterns.\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Anomalies View:\"}),\" Shows only statistically significant anomalies (|Z-score| \\u2265 2.0) - one per year when they occur. These are actual climate anomalies, not normal variations.\"]})})})]});};export default WeatherTrends;","map":{"version":3,"names":["React","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","WeatherTrends","_ref","timeseriesData","activeTab","setActiveTab","activeMetric","setActiveMetric","Object","keys","length","className","children","calculateTrendData","data","yearlyData","dates","forEach","dateStr","index","year","Date","getFullYear","values","count","push","years","map","Number","sort","annualValues","sum","reduce","a","b","movingAverages","window","i","windowSum","slice","toString","filter","val","movingAverageYears","calculateAverageTemp","max_temperature","min_temperature","maxTemp","minTemp","avgValues","maxVal","anomalies","z_scores","significant","historical_avg","getSignificantAnomalies","significantIndices","isSignificant","yearlyAnomalies","date","annualAnomalies","yearData","maxZScoreIndex","maxIndex","zScore","Math","abs","anomaly","z_score","getChartData","precipitation","labels","datasets","trendData","label","borderColor","backgroundColor","tension","pointRadius","pointHoverRadius","borderWidth","fill","baseYears","maxTempData","minTempData","avgTempData","avgTrendData","significantAnomalies","anomalyPoints","found","find","v","showLine","maxAnomalies","maxTrendData","maxPoints","minAnomalies","minTrendData","minPoints","chartData","options","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","legend","position","color","font","size","title","display","text","weight","tooltip","callbacks","context","unit","dataset","parsed","y","toFixed","scales","x","type","grid","lineWidth","ticks","callback","value","parseInt","getLabelForValue","getStats","total","positive","negative","stats","onClick"],"sources":["C:/Users/wasif/OneDrive/Desktop/weather app proj/frontend/src/components/WeatherTrends.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\ninterface TimeseriesData {\n  dates: string[];\n  anomalies: number[];\n  z_scores: number[];\n  significant: boolean[];\n  values: number[];\n  historical_avg: number[];\n}\n\ninterface WeatherTrendsProps {\n  timeseriesData: {\n    precipitation?: TimeseriesData;\n    max_temperature?: TimeseriesData;\n    min_temperature?: TimeseriesData;\n  };\n}\n\nconst WeatherTrends: React.FC<WeatherTrendsProps> = ({ timeseriesData }) => {\n  const [activeTab, setActiveTab] = useState<'trends' | 'anomalies'>('trends');\n  const [activeMetric, setActiveMetric] = useState<'precipitation' | 'temperature'>('precipitation');\n\n  if (!timeseriesData || Object.keys(timeseriesData).length === 0) {\n    return (\n      <div className=\"card animate-slide-up\">\n        <h3 className=\"text-xl font-bold text-gray-800 mb-4\">\n          📊 Weather Analysis\n        </h3>\n        <div className=\"text-center py-8 text-gray-500\">\n          No weather data available. Click \"Run Detection\" to load data.\n        </div>\n      </div>\n    );\n  }\n\n  // Function to calculate annual averages and 10-year moving averages\n  const calculateTrendData = (data: TimeseriesData) => {\n    // Group data by year and calculate annual averages\n    const yearlyData: { [year: number]: { values: number[], count: number } } = {};\n    \n    data.dates.forEach((dateStr, index) => {\n      const year = new Date(dateStr).getFullYear();\n      if (!yearlyData[year]) {\n        yearlyData[year] = { values: [], count: 0 };\n      }\n      yearlyData[year].values.push(data.values[index]);\n      yearlyData[year].count++;\n    });\n\n    // Calculate annual averages\n    const years = Object.keys(yearlyData).map(Number).sort();\n    const annualValues = years.map(year => {\n      const sum = yearlyData[year].values.reduce((a, b) => a + b, 0);\n      return sum / yearlyData[year].values.length;\n    });\n\n    // Calculate 10-year moving averages\n    const movingAverages = [];\n    const window = 10;\n    \n    for (let i = 0; i < annualValues.length; i++) {\n      if (i < window - 1) {\n        movingAverages.push(null); // Not enough data for moving average\n      } else {\n        const windowSum = annualValues.slice(i - window + 1, i + 1).reduce((a, b) => a + b, 0);\n        movingAverages.push(windowSum / window);\n      }\n    }\n\n    return {\n      years: years.map(year => year.toString()),\n      annualValues,\n      movingAverages: movingAverages.filter(val => val !== null),\n      movingAverageYears: years.slice(window - 1).map(year => year.toString())\n    };\n  };\n\n  // Function to calculate average temperature from max and min\n  const calculateAverageTemp = () => {\n    if (!timeseriesData.max_temperature || !timeseriesData.min_temperature) return null;\n    \n    const maxTemp = timeseriesData.max_temperature;\n    const minTemp = timeseriesData.min_temperature;\n    \n    // Calculate average temp for each date\n    const avgValues = maxTemp.values.map((maxVal, index) => (maxVal + minTemp.values[index]) / 2);\n    \n    return {\n      dates: maxTemp.dates,\n      values: avgValues,\n      anomalies: [],\n      z_scores: [],\n      significant: [],\n      historical_avg: []\n    };\n  };\n\n  // Function to get only significant anomalies aggregated by year\n  const getSignificantAnomalies = (data: TimeseriesData) => {\n    const significantIndices = data.significant\n      .map((isSignificant, index) => isSignificant ? index : -1)\n      .filter(index => index !== -1);\n\n    // Group significant anomalies by year\n    const yearlyAnomalies: { [year: number]: { anomalies: number[], z_scores: number[], dates: string[] } } = {};\n    \n    significantIndices.forEach(index => {\n      const date = data.dates[index];\n      const year = new Date(date).getFullYear();\n      \n      if (!yearlyAnomalies[year]) {\n        yearlyAnomalies[year] = { anomalies: [], z_scores: [], dates: [] };\n      }\n      \n      yearlyAnomalies[year].anomalies.push(data.anomalies[index]);\n      yearlyAnomalies[year].z_scores.push(data.z_scores[index]);\n      yearlyAnomalies[year].dates.push(date);\n    });\n\n    // Get the most significant anomaly per year\n    const years = Object.keys(yearlyAnomalies).map(Number).sort();\n    const annualAnomalies = years.map(year => {\n      const yearData = yearlyAnomalies[year];\n      // Find the anomaly with highest absolute z-score for this year\n      const maxZScoreIndex = yearData.z_scores.reduce((maxIndex, zScore, index) => \n        Math.abs(zScore) > Math.abs(yearData.z_scores[maxIndex]) ? index : maxIndex, 0);\n      \n      return {\n        year: year.toString(),\n        anomaly: yearData.anomalies[maxZScoreIndex],\n        z_score: yearData.z_scores[maxZScoreIndex],\n        date: yearData.dates[maxZScoreIndex]\n      };\n    });\n\n    return annualAnomalies;\n  };\n\n  // Prepare data based on active tab\n  const getChartData = () => {\n    if (activeTab === 'trends') {\n      if (activeMetric === 'precipitation') {\n        if (!timeseriesData.precipitation) return { labels: [], datasets: [] };\n        \n        const trendData = calculateTrendData(timeseriesData.precipitation);\n        \n        return {\n          labels: trendData.years,\n          datasets: [\n            {\n              label: 'Annual Precipitation',\n              data: trendData.annualValues,\n              borderColor: 'rgba(59, 130, 246, 0.4)',\n              backgroundColor: 'rgba(59, 130, 246, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Precipitation (10Y Avg)',\n              data: trendData.movingAverages,\n              borderColor: '#059669',\n              backgroundColor: 'rgba(5, 150, 105, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          ]\n        };\n      } else {\n        // Temperature - show all three on same chart\n        const datasets = [];\n        let baseYears: string[] = [];\n        \n        if (timeseriesData.max_temperature) {\n          const maxTempData = calculateTrendData(timeseriesData.max_temperature);\n          baseYears = maxTempData.years;\n          \n          datasets.push(\n            {\n              label: 'Max Temperature',\n              data: maxTempData.annualValues,\n              borderColor: 'rgba(239, 68, 68, 0.4)',\n              backgroundColor: 'rgba(239, 68, 68, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Max Temp (10Y Avg)',\n              data: maxTempData.movingAverages,\n              borderColor: '#dc2626',\n              backgroundColor: 'rgba(220, 38, 38, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          );\n        }\n        \n        if (timeseriesData.min_temperature) {\n          const minTempData = calculateTrendData(timeseriesData.min_temperature);\n          \n          datasets.push(\n            {\n              label: 'Min Temperature',\n              data: minTempData.annualValues,\n              borderColor: 'rgba(16, 185, 129, 0.4)',\n              backgroundColor: 'rgba(16, 185, 129, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Min Temp (10Y Avg)',\n              data: minTempData.movingAverages,\n              borderColor: '#059669',\n              backgroundColor: 'rgba(5, 150, 105, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          );\n        }\n        \n        // Add average temperature\n        const avgTempData = calculateAverageTemp();\n        if (avgTempData) {\n          const avgTrendData = calculateTrendData(avgTempData);\n          \n          datasets.push(\n            {\n              label: 'Mean Temperature',\n              data: avgTrendData.annualValues,\n              borderColor: 'rgba(107, 114, 128, 0.4)',\n              backgroundColor: 'rgba(107, 114, 128, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 4,\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Mean Temp (10Y Avg)',\n              data: avgTrendData.movingAverages,\n              borderColor: '#6b7280',\n              backgroundColor: 'rgba(107, 114, 128, 0.1)',\n              tension: 0.1,\n              pointRadius: 0,\n              pointHoverRadius: 5,\n              borderWidth: 3,\n              fill: false,\n            }\n          );\n        }\n        \n        return {\n          labels: baseYears,\n          datasets\n        };\n      }\n    } else {\n      // Anomalies - show only significant anomalies per metric\n      if (activeMetric === 'precipitation' && timeseriesData.precipitation) {\n        const significantAnomalies = getSignificantAnomalies(timeseriesData.precipitation);\n        // Create a dataset with y values only at anomaly years, null elsewhere\n        const trendData = calculateTrendData(timeseriesData.precipitation);\n        const anomalyPoints = trendData.years.map(year => {\n          const found = significantAnomalies.find(a => a.year === year);\n          return found ? found.anomaly : null;\n        });\n        return {\n          labels: trendData.years,\n          datasets: [\n            {\n              label: 'Significant Precipitation Anomalies',\n              data: anomalyPoints,\n              borderColor: '#3b82f6',\n              backgroundColor: '#3b82f6',\n              pointRadius: anomalyPoints.map(v => (v !== null ? 6 : 0)) as any,\n              pointHoverRadius: anomalyPoints.map(v => (v !== null ? 8 : 0)) as any,\n              showLine: false,\n              fill: false,\n              tension: 0.1,\n              borderWidth: 2,\n            }\n          ]\n        };\n      } else {\n        // Temperature anomalies - show all three types\n        const datasets = [];\n        let baseYears: string[] = [];\n        if (timeseriesData.max_temperature) {\n          const maxAnomalies = getSignificantAnomalies(timeseriesData.max_temperature);\n          const maxTrendData = calculateTrendData(timeseriesData.max_temperature);\n          baseYears = maxTrendData.years;\n          const maxPoints = maxTrendData.years.map(year => {\n            const found = maxAnomalies.find(a => a.year === year);\n            return found ? found.anomaly : null;\n          });\n          datasets.push({\n            label: 'Max Temperature Anomalies',\n            data: maxPoints,\n            borderColor: '#ef4444',\n            backgroundColor: '#ef4444',\n            pointRadius: maxPoints.map(v => (v !== null ? 6 : 0)) as any,\n            pointHoverRadius: maxPoints.map(v => (v !== null ? 8 : 0)) as any,\n            showLine: false,\n            fill: false,\n            tension: 0.1,\n            borderWidth: 2,\n          });\n        }\n        if (timeseriesData.min_temperature) {\n          const minAnomalies = getSignificantAnomalies(timeseriesData.min_temperature);\n          const minTrendData = calculateTrendData(timeseriesData.min_temperature);\n          const minPoints = minTrendData.years.map(year => {\n            const found = minAnomalies.find(a => a.year === year);\n            return found ? found.anomaly : null;\n          });\n          datasets.push({\n            label: 'Min Temperature Anomalies',\n            data: minPoints,\n            borderColor: '#10b981',\n            backgroundColor: '#10b981',\n            pointRadius: minPoints.map(v => (v !== null ? 6 : 0)) as any,\n            pointHoverRadius: minPoints.map(v => (v !== null ? 8 : 0)) as any,\n            showLine: false,\n            fill: false,\n            tension: 0.1,\n            borderWidth: 2,\n          });\n        }\n        return {\n          labels: baseYears,\n          datasets\n        };\n      }\n    }\n  };\n\n  const chartData = getChartData();\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index' as const,\n      intersect: false,\n    },\n    plugins: {\n      legend: {\n        position: 'top' as const,\n        labels: {\n          color: '#374151',\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: activeTab === 'trends' ? \n          (activeMetric === 'precipitation' ? \n            'Annual Precipitation in Pakistan (1901–2024) with 10-Year Moving Average' : \n            'Average Annual Temperatures in Pakistan (1901–2024) with 10-Year Moving Average') :\n          (activeMetric === 'precipitation' ? \n            'Significant Precipitation Anomalies in Pakistan (1901-2024)' :\n            'Significant Temperature Anomalies in Pakistan (1901-2024)'),\n        color: '#1f2937',\n        font: {\n          size: 16,\n          weight: 'bold' as const\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: (context: any) => {\n            return `Year: ${context[0].label}`;\n          },\n          label: (context: any) => {\n            const unit = activeMetric === 'precipitation' ? 'mm' : '°C';\n            \n            if (activeTab === 'trends') {\n              return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit}`;\n            } else {\n              return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}${unit} (Significant Anomaly)`;\n            }\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'category' as const,\n        title: {\n          display: true,\n          text: 'Year',\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280',\n          callback: function(value: any, index: number) {\n            // Show every 10th year for trends to avoid crowding\n            const year = parseInt(this.getLabelForValue(value));\n            return activeTab === 'trends' && year % 10 === 0 ? year : (activeTab === 'anomalies' ? year : '');\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: activeTab === 'trends' ? \n            `${activeMetric === 'precipitation' ? 'Precipitation (mm)' : 'Temperature (°C)'}` :\n            `Anomaly (${activeMetric === 'precipitation' ? 'mm' : '°C'})`,\n          color: '#374151',\n          font: {\n            size: 14\n          }\n        },\n        grid: {\n          color: '#e5e7eb',\n          lineWidth: 0.5\n        },\n        ticks: {\n          color: '#6b7280'\n        }\n      }\n    }\n  };\n\n  // Calculate summary statistics for anomalies\n  const getStats = () => {\n    if (activeTab !== 'anomalies') return null;\n    \n    if (activeMetric === 'precipitation' && timeseriesData.precipitation) {\n      const significantAnomalies = getSignificantAnomalies(timeseriesData.precipitation);\n      return {\n        total: significantAnomalies.length,\n        positive: significantAnomalies.filter(a => a.anomaly > 0).length,\n        negative: significantAnomalies.filter(a => a.anomaly < 0).length\n      };\n    } else {\n      const maxAnomalies = timeseriesData.max_temperature ? getSignificantAnomalies(timeseriesData.max_temperature) : [];\n      const minAnomalies = timeseriesData.min_temperature ? getSignificantAnomalies(timeseriesData.min_temperature) : [];\n      \n      return {\n        maxTemp: maxAnomalies.length,\n        minTemp: minAnomalies.length,\n        total: maxAnomalies.length + minAnomalies.length\n      };\n    }\n  };\n\n  const stats = getStats();\n\n  return (\n    <div className=\"card animate-slide-up\">\n      {/* Header with tabs */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4\">\n        <h3 className=\"text-xl font-bold text-gray-800\">\n          📊 Weather Analysis Dashboard\n        </h3>\n        \n        {/* View Toggle */}\n        <div className=\"flex bg-gray-100 rounded-lg p-1\">\n          <button\n            onClick={() => setActiveTab('trends')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeTab === 'trends'\n                ? 'bg-blue-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            📈 Trends\n          </button>\n          <button\n            onClick={() => setActiveTab('anomalies')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeTab === 'anomalies'\n                ? 'bg-red-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            🚨 Anomalies\n          </button>\n        </div>\n      </div>\n\n      {/* Metric selector */}\n      <div className=\"flex justify-center mb-6\">\n        <div className=\"flex bg-gray-50 rounded-lg p-1 gap-1\">\n          <button\n            onClick={() => setActiveMetric('precipitation')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeMetric === 'precipitation'\n                ? 'bg-blue-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            🌧️ Precipitation\n          </button>\n          <button\n            onClick={() => setActiveMetric('temperature')}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              activeMetric === 'temperature'\n                ? 'bg-red-500 text-white shadow-sm'\n                : 'text-gray-600 hover:text-gray-800'\n            }`}\n          >\n            🌡️ Temperature\n          </button>\n        </div>\n      </div>\n\n      {/* Chart */}\n      <div className=\"h-96 mb-6\">\n        <Line data={chartData} options={options} />\n      </div>\n\n      {/* Summary Statistics */}\n      {activeTab === 'anomalies' && stats && (\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 bg-gray-50 p-4 rounded-lg\">\n          {activeMetric === 'precipitation' ? (\n            <>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Total Significant</p>\n                <p className=\"text-2xl font-bold text-blue-600\">{stats.total}</p>\n                <p className=\"text-xs text-gray-500\">Anomalies</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Wet Anomalies</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.positive}</p>\n                <p className=\"text-xs text-gray-500\">Above normal</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Dry Anomalies</p>\n                <p className=\"text-2xl font-bold text-red-600\">{stats.negative}</p>\n                <p className=\"text-xs text-gray-500\">Below normal</p>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Max Temp Anomalies</p>\n                <p className=\"text-2xl font-bold text-red-600\">{stats.maxTemp}</p>\n                <p className=\"text-xs text-gray-500\">Significant events</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Min Temp Anomalies</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.minTemp}</p>\n                <p className=\"text-xs text-gray-500\">Significant events</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-semibold text-gray-700\">Detection Threshold</p>\n                <p className=\"text-2xl font-bold text-gray-600\">|Z| ≥ 2.0</p>\n                <p className=\"text-xs text-gray-500\">Statistical significance</p>\n              </div>\n            </>\n          )}\n        </div>\n      )}\n\n      {/* Trend Statistics */}\n      {activeTab === 'trends' && (\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <div className=\"text-center\">\n            <p className=\"font-semibold text-gray-700\">Long-term Climate Trends (1901-2024)</p>\n            <p className=\"text-sm text-gray-600 mt-2\">\n              {activeMetric === 'precipitation' ? (\n                <>📈 <strong>Annual Data:</strong> Light line shows yearly averages<br/>\n                📊 <strong>10-Year Moving Average:</strong> Bold line shows smoothed long-term trends</>\n              ) : (\n                <>🌡️ <strong>Combined View:</strong> Max, Min, and Mean temperatures with 10-year moving averages<br/>\n                📊 <strong>Climate Patterns:</strong> Bold lines show long-term warming trends</>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Explanation */}\n      <div className=\"mt-4 text-sm text-gray-600\">\n        <p>\n          {activeTab === 'trends' ? (\n            activeMetric === 'precipitation' ? \n              <><strong>Trends View:</strong> Shows annual precipitation averages and 10-year moving averages to reveal long-term climate patterns.</> :\n              <><strong>Temperature Trends:</strong> Shows max, min, and mean annual temperatures with 10-year smoothing to reveal warming patterns.</>\n          ) : (\n            <><strong>Anomalies View:</strong> Shows only statistically significant anomalies (|Z-score| ≥ 2.0) - one per year when they occur. These are actual climate anomalies, not normal variations.</>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherTrends; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}